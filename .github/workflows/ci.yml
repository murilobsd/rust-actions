name: CI

on:
  push:
    branches:
      - main
      - master

  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  # renovate: datasource=crate depName=cargo-deny versioning=semver
  CARGO_DENY_VERSION: 0.16.4
  # renovate: datasource=crate depName=cargo-machete versioning=semver
  CARGO_MACHETE_VERSION: 0.7.0
  # renovate: datasource=crate depName=grcov versioning=semver
  GRCOV_VERSION: 0.8.20

jobs:
  changed-files:
    name: Changed Files
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: tj-actions/changed-files@d6e91a2266cdb9d62096cebf1e8546899c6aa18f # v45.0.6
        id: changed-files-rust
        with:
          files: |
            crates/**
            migrations/**
            src/**
            build.rs
            Cargo.lock
            Cargo.toml
            rust-toolchain.toml

      - uses: tj-actions/changed-files@d6e91a2266cdb9d62096cebf1e8546899c6aa18f # v45.0.6
        id: changed-files-rust-lockfile
        with:
          files: Cargo.lock

    outputs:
      non-js: ${{ steps.changed-files-non-js.outputs.any_modified }}
      rust: ${{ steps.changed-files-rust.outputs.any_modified }}
      rust-lockfile: ${{ steps.changed-files-rust-lockfile.outputs.any_modified }}

  lint:
    name: Lint
    runs-on: ubuntu-24.04
    needs: changed-files
    if: needs.changed-files.outputs.rust == 'true'

    env:
      RUSTFLAGS: "-D warnings"
      RUSTDOCFLAGS: "-D warnings"

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - run: rustup component add rustfmt
      - run: rustup component add clippy

      - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7

      - run: cargo fmt --check --all
      - run: cargo clippy --all-targets --all-features --workspace
      - run: cargo doc --no-deps --document-private-items

  deps:
    name: Dependencies
    runs-on: ubuntu-24.04
    needs: changed-files
    # if: github.event_name != 'pull_request' || needs.changed-files.outputs.rust-lockfile == 'true'
    if: github.event_name != 'pull_request' || needs.changed-files.outputs.rust == 'true'

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7

      - run: cargo install cargo-deny --vers ${CARGO_DENY_VERSION}
      - run: cargo deny check

      - run: cargo install cargo-machete --vers ${CARGO_MACHETE_VERSION}
      - run: cargo machete

  test:
    name: Test
    runs-on: ubuntu-24.04
    needs: changed-files
    if: needs.changed-files.outputs.rust == 'true'

    env:
      RUST_BACKTRACE: 1
      RUSTFLAGS: "-D warnings -Cinstrument-coverage"
      MALLOC_CONF: "background_thread:true,abort_conf:true,abort:true,junk:true"
      CARGO_TARGET_DIR: /mnt/target

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7
        with:
          # Ensure that we cache from the right target directory. (See below
          # for the details of how and when this gets created.)
          workspaces: '. -> ${{ env.CARGO_TARGET_DIR }}'

      # Create a working directory on /mnt, which is a larger temporary
      # filesystem than /, that we can then point our later commands to.
      - run: |
          sudo mkdir ${CARGO_TARGET_DIR}
          sudo chown $(id -u):$(id -g) ${CARGO_TARGET_DIR}

      - run: cargo build --tests --workspace
      - run: cargo test --workspace

      - run: curl -sL https://github.com/mozilla/grcov/releases/download/v${GRCOV_VERSION}/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar xjf -
      - run: rustup component add llvm-tools
      - run: ./grcov . --binary-path ${CARGO_TARGET_DIR}/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" --ignore "${CARGO_TARGET_DIR}/debug/build/**" -o ${CARGO_TARGET_DIR}/coverage.lcov

      - uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5.3.1
        with:
          slug: murilobsd/rust-actions
          files: ${CARGO_TARGET_DIR}/coverage.lcov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
